(* Coursera Programming Languages, Homework 3, Provided Code *)

exception NoAnswer

datatype pattern = Wildcard
		 | Variable of string
		 | UnitP
		 | ConstP of int
		 | TupleP of pattern list
		 | ConstructorP of string * pattern

datatype valu = Const of int
	      | Unit
	      | Tuple of valu list
	      | Constructor of string * valu

fun g f1 f2 p =
    let 
	val r = g f1 f2 
    in
	case p of
	    Wildcard          => f1 ()
	  | Variable x        => f2 x
	  | TupleP ps         => List.foldl (fn (p,i) => (r p) + i) 0 ps
	  | ConstructorP(_,p) => r p
	  | _                 => 0
    end

(**** for the challenge problem only ****)

datatype typ = Anything
	     | UnitT
	     | IntT
	     | TupleT of typ list
	     | Datatype of string

(**** you can put all your code here ****)

(* Problem 1 *)
fun only_capitals(words : string list) =
  let fun f s = Char.isUpper(String.sub(s,0))
  in List.filter(f) words end

(* Problem 2 *)
fun longest_string1(words : string list) = 
  List.foldl (fn (x,y) => if (size x > size y) then x else y) (hd words) (tl words)

(* Problem 3 *)
fun longest_string2(words: string list) =
  List.foldl (fn (x,y) => if(size x >= size y) then x else y) (hd words) (tl
  words)

(* Problem 4 *)
fun longest_string_helper(f, words) = 
  List.foldl (fn (x,y) => if f(size x, size y) then x else y) (hd words) (tl words) 

fun longest_string3(words: string list) = 
  longest_string_helper((fn (x,y) => x > y), words)

fun longest_string4(words: string list) = "poo"
